package com.bank.dao.impl;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Time;

import com.bank.dao.TransationServiceDAO;
import com.bank.dao.util.PostresqlConnection;
import com.bank.exception.BussinessException;
import com.bank.modal.Account;

public class TransactionServiceDAOImpl implements TransationServiceDAO {

	@Override
	public int depositeToAccount(Account account, float amount) throws BussinessException {
		
		int c= 0;
		String msg = "Amount Debit to Account";
		String t_type = "debit";
		float balance = account.getBalance() + amount;
		try ( Connection connection = PostresqlConnection.getConnection() ) {
			
			String query = "insert into bank.transaction (acc_num, date, msg, amount, t_type, balance) values (?,?,?,?,?,?)";
			PreparedStatement preparedStatement = connection.prepareStatement(query);
			preparedStatement.setLong(1, account.getAcc_num());
			preparedStatement.setDate(2, new Date(new java.util.Date().getTime()));
			preparedStatement.setString(3, msg);
			preparedStatement.setFloat(4, amount);
			preparedStatement.setString(5, t_type);
			preparedStatement.setFloat(6, balance);
			c = preparedStatement.executeUpdate();
			
			logFile.trace(c);
			
		} catch (ClassNotFoundException e) {
			log.error(e);
		} catch (SQLException e) {
			log.error(e);
		}
		
		if(c != 0)
			return c;
		else
			throw new BussinessException("Transaction Incomplited / Transaction is not Done , Try Again Later.");

	}

	@Override
	public int widrawToAccount(Account account, float amount) throws BussinessException {

		int c= 0;
		
		if(amount > account.getBalance()) 
			throw new BussinessException("There is not enough Balance, Try agani with Less Amount.");
		
		String msg = "Amount Credit from Account";
		String t_type = "credit";	
		float balance = account.getBalance() - amount;
		
		try ( Connection connection = PostresqlConnection.getConnection() ) {
			
			String query = "insert into bank.transaction (acc_num, date, msg, amount, t_type, balance, time) values (?,?,?,?,?,?,?)";
			PreparedStatement preparedStatement = connection.prepareStatement(query);
			preparedStatement.setLong(1, account.getAcc_num());
			preparedStatement.setDate(2, new Date(new java.util.Date().getTime()));
			preparedStatement.setString(3, msg);
			preparedStatement.setFloat(4, amount);
			preparedStatement.setString(5, t_type);
			preparedStatement.setFloat(6, balance);
			preparedStatement.setTime(7, new Time(new java.util.Date().getTime()));
			c = preparedStatement.executeUpdate();
			
			logFile.trace(c);
			
		} catch (ClassNotFoundException e) {
			log.error(e);
		} catch (SQLException e) {
			log.error(e);
		}
		
		if(c != 0)
			return c;
		else
			throw new BussinessException("Transaction Incomplited / Transaction is not Done , Try Again Later.");

	}

	@Override
	public Account BalanceOfAccount(Account account) throws BussinessException {
		// TODO Auto-generated method stub
		return null;
	}

}
