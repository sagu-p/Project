package com.bank.services.impl;

import java.util.ArrayList;
import java.util.List;

import com.bank.dao.TransationServiceDAO;
import com.bank.dao.impl.TransactionServiceDAOImpl;
import com.bank.exception.BussinessException;
import com.bank.modal.Account;
import com.bank.modal.Employee;
import com.bank.modal.Transaction;
import com.bank.services.TrasactionService;

public class TransactioServiceImpl implements TrasactionService {

	TransationServiceDAO transationServiceDAO = new TransactionServiceDAOImpl();
	
	@Override
	public int depositeToAccount(Account account, float amount) throws BussinessException {
		
		int c = 0;
		
		if(amount > 0) {
			c = transationServiceDAO.depositeToAccount(account, amount);
		}
		else
			throw new BussinessException("Deposite Amount should more than Zero(0).");
		
		if(c == 0)
			throw new BussinessException("Transaction Incompleted.");
		
		return c;
	}

	@Override
	public int widrawToAccount(Account account, float amount) throws BussinessException {
		int c = 0;
		
		if(amount > 0) {
			c = transationServiceDAO.widrawToAccount(account, amount);
		}
		else
			throw new BussinessException("Widraval Amount should more than Zero(0).");
		
		if(c == 0)
			throw new BussinessException("Transaction Incompleted.");
		
		return c;
	}

	@Override
	public Account BalanceOfAccount(Account account) throws BussinessException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Transaction> getAllTransactionOfAllAccountsByStatus(int status) throws BussinessException {
		List<Transaction> transactionList = new ArrayList<>();
		
		if(status == 0 || status == 1 || status == 2)
			transactionList = transationServiceDAO.getAllTransactionOfAllAccountsByStatus(status);
		else
			throw new BussinessException("Something Went Wrong, Try Again.");
		
		if(transactionList.size() == 0)
			throw new BussinessException("No Transation/s found.");
		
		return transactionList;
	}

	@Override
	public int transactionConfirmationFromEmployee(Employee employee, Transaction transaction, int status) throws BussinessException {
		int c = 0;
		
		if(status == 0 || status == 1 || status == 2)
			c = transationServiceDAO.transactionConfirmationFromEmployee(employee, transaction, status);
		else
			throw new BussinessException("Something Went Wrong, Try Again.");
		
		if(c != 0)
			return c;
		else
			throw new BussinessException("Transaction Approval / Rejection is not Done , Try Again Later.");
	}

}
